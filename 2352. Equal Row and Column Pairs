
Example 1:


Input: grid = [[3,2,1],[1,7,6],[2,7,7]]
Output: 1
Explanation: There is 1 equal row and column pair:
- (Row 2, Column 1): [2,7,7]
Example 2:


Input: grid = [[3,1,2,2],[1,4,4,5],[2,4,2,2],[2,4,2,2]]
Output: 3
Explanation: There are 3 equal row and column pairs:
- (Row 0, Column 0): [3,1,2,2]
- (Row 2, Column 2): [2,4,2,2]
- (Row 3, Column 2): [2,4,2,2]

class Solution:
    def equalPairs(self, grid: List[List[int]]) -> int:
        n = len(grid)
        row_count = {}
        col_count = {}
    
    
        for row in grid:
            row_tuple = tuple(row)
            if row_tuple not in row_count:
               row_count[row_tuple] = 0
            row_count[row_tuple] += 1
    
        for col in range(n):
            col_tuple = tuple(grid[i][col] for i in range(n))
            if col_tuple not in col_count:
                col_count[col_tuple] = 0
            col_count[col_tuple] += 1

        count = 0
        for row, freq in row_count.items():
            if row in col_count:
               count += freq * col_count[row]
    
        return count
